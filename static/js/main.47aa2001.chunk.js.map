{"version":3,"sources":["reducer.helpers.ts","reducer.ts","middlewares/url.ts","store.ts","components/indicator.tsx","components/indicator.wrapper.ts","components/category.tsx","components/category.wrapper.ts","components/subTheme.tsx","components/subTheme.wrapper.ts","components/theme.tsx","components/theme.wrapper.ts","components/app.tsx","actions.ts","config.ts","components/app.wrapper.ts","serviceWorker.ts","index.tsx"],"names":["getAux","themes","aux","forEach","t","sub_themes","s","categories","c","indicators","i","String","id","category","indicator","subTheme","theme","getSelectionsClone","state","Object","toConsumableArray","Set","subThemes","initialState","data","status","Reducer","arguments","length","undefined","action","type","objectSpread","payload","ids","_getSelectionsClone","_ref","validIds","keys","every","includes","isValidIndicator","ind","add","push","_action$payload","_getSelectionsClone2","has","subThemeIndex","indexOf","catIndex","themeIndex","delete","splice","Middleware","store","next","getState","Qs","parse","location","search","ignoreQueryPrefix","dispatch","args","stringify","arrayFormat","history","pushState","concat","middlewares","thunk","url","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","apply","createStore","reducer","Indicator","isSelected","name","react_default","a","createElement","className","data-category","data-id","data-sub-theme","data-theme","Wrapper","connect","ownProps","Category","map","indicator_wrapper","assign","key","SubTheme","category_wrapper","Theme","subTheme_wrapper","App","this","props","getContent","_this$props","onClick","e","target","theme_wrapper","Component","getData","Axios","get","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","Retry","retries","sent","t0","console","error","stop","_x","el","_el$dataset","dataset","parseInt","Boolean","hostname","match","ReactDOM","render","es","Store","app_wrapper","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.47aa2001.chunk.js","sourcesContent":["import { ThemeT } from './components/theme';\nimport { IndicatorT } from './components/indicator';\nimport { StateT } from './reducer';\n\nexport interface AuxItemT {\n  category: number;\n  indicator: number;\n  subTheme: number;\n  theme: number;\n}\nexport interface AuxT {\n  [propName: string]: AuxItemT;\n}\n\nexport const getAux = (themes: Array<ThemeT>): AuxT => {\n  const aux: AuxT = {};\n  themes.forEach((t) => {\n    t.sub_themes.forEach((s) => {\n      s.categories.forEach((c) => {\n        c.indicators.forEach((i: IndicatorT) => {\n          aux[String(i.id)] = {\n            category: c.id,\n            indicator: i.id,\n            subTheme: s.id,\n            theme: t.id,\n          };\n        });\n      });\n    });\n  });\n  return aux;\n};\n\nexport const isValidIndicator = ({ aux }: StateT, ids: Array<string>) => {\n  const validIds = Object.keys(aux);\n  return ids.every((id) => validIds.includes(id));\n};\n\nexport const getSelectionsClone = (state: StateT) => ({\n  categories: [...state.categories],\n  indicators: new Set([...state.indicators]),\n  subThemes: [...state.subThemes],\n  themes: [...state.themes],\n});\n","import { ThemeT } from './components/theme';\nimport { IndicatorT } from './components/indicator';\nimport { ActionT } from './actions';\nimport {\n  AuxT,\n  getAux,\n  getSelectionsClone,\n  isValidIndicator,\n} from './reducer.helpers';\nimport Qs from 'qs';\n\nexport interface StateT {\n  aux: AuxT;\n  categories: Array<number>;\n  data: Array<ThemeT>;\n  indicators: Set<number>;\n  subThemes: Array<number>;\n  themes: Array<number>;\n  status: 'PENDING' | 'ERROR' | 'NOT_FOUND' | 'OK';\n}\n\nconst initialState = {\n  aux: {},\n  categories: [],\n  data: [],\n  indicators: new Set(),\n  subThemes: [],\n  themes: [],\n  status: 'PENDING' as 'PENDING',\n};\n\nconst Reducer = (state: StateT = initialState, action: ActionT): StateT => {\n  switch (action.type) {\n    case 'FETCH_PENDING': {\n      return { ...state, status: 'PENDING' };\n      break;\n    }\n    case 'FETCH_FULFILLED': {\n      return {\n        ...state,\n        aux: getAux(action.payload),\n        data: action.payload,\n        status: 'OK',\n      };\n      break;\n    }\n    case 'FETCH_REJECTED': {\n      return { ...state, status: 'ERROR' };\n      break;\n    }\n    case 'SET_INDICATORS': {\n      const ids = action.payload;\n      const { categories, indicators, subThemes, themes } = getSelectionsClone(\n        state,\n      );\n      if (!isValidIndicator(state, action.payload))\n        return { ...state, status: 'NOT_FOUND' };\n      ids.forEach((i: string) => {\n        const ind = state.aux[i];\n        indicators.add(ind.indicator);\n        categories.push(ind.category);\n        themes.push(ind.theme);\n        subThemes.push(ind.subTheme);\n      });\n      return {\n        ...state,\n        categories,\n        indicators,\n        subThemes,\n        themes,\n      };\n      break;\n    }\n    case 'SET_INDICATOR': {\n      const { id, category, theme, subTheme } = action.payload;\n      const { categories, indicators, subThemes, themes } = getSelectionsClone(\n        state,\n      );\n      if (indicators.has(id)) {\n        const subThemeIndex = subThemes.indexOf(subTheme);\n        const catIndex = state.categories.indexOf(category);\n        const themeIndex = themes.indexOf(theme);\n        indicators.delete(id);\n        categories.splice(catIndex, 1);\n        subThemes.splice(subThemeIndex, 1);\n        themes.splice(themeIndex, 1);\n      } else {\n        indicators.add(id);\n        categories.push(category);\n        subThemes.push(subTheme);\n        themes.push(theme);\n      }\n      return {\n        ...state,\n        categories,\n        indicators,\n        subThemes,\n        themes,\n      };\n      break;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import Qs from 'qs';\nimport { ActionT } from '../actions';\n\nconst Middleware = (store: any) => (next: any) => (action: ActionT) => {\n  next(action);\n  const state = store.getState();\n  switch (action.type) {\n    case 'FETCH_FULFILLED': {\n      const args = Qs.parse(location.search, { ignoreQueryPrefix: true });\n      const ids = args.indicators;\n      if (ids && ids.length > 0) {\n        store.dispatch({ type: 'SET_INDICATORS', payload: ids });\n      }\n      break;\n    }\n    case 'SET_INDICATOR': {\n      const args = Qs.stringify(\n        { indicators: [...state.indicators] },\n        { arrayFormat: 'brackets' },\n      );\n      history.pushState({}, '', `?${args}`);\n      break;\n    }\n    default:\n  }\n};\n\nexport default Middleware;\n","import { createStore } from 'redux';\nimport { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport url from './middlewares/url';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst middlewares = [thunk, url];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleware = applyMiddleware(...middlewares);\n\nexport default createStore(reducer, composeEnhancers(middleware));\n","import React from 'react';\n\nconst Indicator = ({\n  category,\n  id,\n  isSelected,\n  name,\n  subTheme,\n  theme,\n}: IndicatorT) => (\n  <div\n    className={isSelected ? 'indicator selected' : 'indicator'}\n    data-category={category}\n    data-id={id}\n    data-sub-theme={subTheme}\n    data-theme={theme}\n  >\n    {name}\n  </div>\n);\n\nexport interface IndicatorT {\n  category: number;\n  id: number;\n  isSelected: boolean;\n  name: string;\n  subTheme: number;\n  theme: number;\n}\n\nexport default Indicator;\n","import { connect } from 'react-redux';\nimport Indicator from './indicator';\nimport { IndicatorT } from './indicator';\nimport { StateT } from '../reducer';\n\nexport const mapStateToProps = (state: any, ownProps: IndicatorT) => {\n  const { indicators } = state;\n  return {\n    ...ownProps,\n    isSelected: indicators.has(ownProps.id),\n  };\n};\n\nconst Wrapper = connect(mapStateToProps)(Indicator);\n\nexport default Wrapper;\n","import React from 'react';\nimport Indicator from './indicator.wrapper';\nimport { IndicatorT } from './indicator';\n\nconst Category = ({\n  id,\n  indicators,\n  isSelected,\n  name,\n  subTheme,\n  theme,\n}: CategoryT) => (\n  <div className=\"category\">\n    <div className={isSelected ? 'name selected' : 'name'}>{name}</div>\n    <div className=\"indicators\">\n      {indicators.map(\n        (i) =>\n          i && (\n            <Indicator\n              {...i}\n              category={id}\n              key={i.id}\n              subTheme={subTheme}\n              theme={theme}\n            />\n          ),\n      )}\n    </div>\n  </div>\n);\n\nexport interface CategoryT {\n  id: number;\n  name: string;\n  indicators: [IndicatorT];\n  isSelected: boolean;\n  subTheme: number;\n  theme: number;\n}\n\nexport default Category;\n","import { connect } from 'react-redux';\nimport Category from './category';\nimport { CategoryT } from './category';\nimport { StateT } from '../reducer';\n\nexport const mapStateToProps = (state: any, ownProps: CategoryT) => {\n  const { categories } = state;\n  return {\n    ...ownProps,\n    isSelected: categories.includes(ownProps.id),\n  };\n};\n\nconst Wrapper = connect(mapStateToProps)(Category);\n\nexport default Wrapper;\n","import React from 'react';\nimport Category from './category.wrapper';\nimport { CategoryT } from './category';\n\nconst SubTheme = ({ name, id, categories, theme, isSelected }: SubThemeT) => (\n  <div className=\"subTheme\">\n    <div className={isSelected ? 'name selected' : 'name'}>{name}</div>\n    <div className=\"categories\">\n      {categories.map(\n        (i) => i && <Category {...i} key={i.id} subTheme={id} theme={theme} />,\n      )}\n    </div>\n  </div>\n);\n\nexport interface SubThemeT {\n  id: number;\n  name: string;\n  theme: number;\n  categories: [CategoryT];\n  isSelected: boolean;\n}\n\nexport default SubTheme;\n","import { connect } from 'react-redux';\nimport SubTheme from './subTheme';\nimport { SubThemeT } from './subTheme';\nimport { StateT } from '../reducer';\n\nexport const mapStateToProps = (state: any, ownProps: SubThemeT) => {\n  const { subThemes } = state;\n  return {\n    ...ownProps,\n    isSelected: subThemes.includes(ownProps.id),\n  };\n};\n\nconst Wrapper = connect(mapStateToProps)(SubTheme);\n\nexport default Wrapper;\n","import React from 'react';\nimport SubTheme from './subTheme.wrapper';\nimport { SubThemeT } from './subTheme';\n\nconst Theme = ({ name, id, sub_themes, isSelected }: ThemeT) => (\n  <div className=\"theme\">\n    <div className={isSelected ? 'name selected' : 'name'}>{name}</div>\n    <div className=\"subThemes\">\n      {sub_themes.map((i) => i && <SubTheme {...i} key={i.id} theme={id} />)}\n    </div>\n  </div>\n);\n\nexport interface ThemeT {\n  id: number;\n  name: string;\n  sub_themes: [SubThemeT];\n  isSelected: boolean;\n}\n\nexport default Theme;\n","import { connect } from 'react-redux';\nimport Theme from './theme';\nimport { ThemeT } from './theme';\nimport { StateT } from '../reducer';\n\nexport const mapStateToProps = (state: any, ownProps: ThemeT) => {\n  const { themes } = state;\n  return {\n    ...ownProps,\n    isSelected: themes.includes(ownProps.id),\n  };\n};\n\nconst Wrapper = connect(mapStateToProps)(Theme);\n\nexport default Wrapper;\n","import React, { Component, Fragment } from 'react';\nimport Axios from 'axios';\nimport './app.css';\nimport Theme from './theme.wrapper';\n\nclass App extends Component<any, any> {\n  componentDidMount() {\n    this.props.getContent();\n  }\n  render() {\n    const { data, onClick, status } = this.props;\n    switch (status) {\n      case 'PENDING': {\n        return <p>loading...</p>;\n        break;\n      }\n      case 'NOT_FOUND': {\n        return <p>Indicator not found</p>;\n        break;\n      }\n      case 'ERROR': {\n        return <p>Connection error :(</p>;\n        break;\n      }\n      case 'OK': {\n        return (\n          <div className=\"App\">\n            <div className=\"header\">\n              <div>Theme</div>\n              <div>SubTheme</div>\n              <div>Category</div>\n              <div>Indicator</div>\n            </div>\n            <div onClick={(e) => onClick(e.target)}>\n              {data.map((i: any) => i && <Theme {...i} key={i.id} />)}\n            </div>\n          </div>\n        );\n        break;\n      }\n    }\n  }\n}\n\nexport default App;\n","import Axios from 'axios';\nimport Retry from 'async-retry';\nimport { API_URL, RETRIES } from './config';\n\nconst getData = (dispatch: Function) => {\n  dispatch({ type: 'FETCH_PENDING' });\n  return Axios.get(API_URL);\n};\n\nexport const fetch = () => {\n  return async (dispatch: Function) => {\n    try {\n      const res: any = await Retry(() => getData(dispatch), {\n        retries: RETRIES,\n      });\n      dispatch({ type: 'FETCH_FULFILLED', payload: res.data });\n    } catch (e) {\n      dispatch({ type: 'FETCH_REJECTED' });\n      console.error(e);\n      throw e;\n    }\n  };\n};\n\nexport const setIndicator = (payload: ActiveT) => ({\n  type: 'SET_INDICATOR',\n  payload,\n});\n\nexport interface ActiveT {\n  category: number;\n  id: number;\n  subTheme: number;\n  theme: number;\n}\n\nexport interface ActionT {\n  type:\n    | 'FETCH_FULFILLED'\n    | 'FETCH_PENDING'\n    | 'FETCH_REJECTED'\n    | 'SET_INDICATOR'\n    | 'SET_INDICATORS';\n  payload?: any;\n}\n","export const API_URL =\n  'https://kf6xwyykee.execute-api.us-east-1.amazonaws.com/production/tree/input';\n\nexport const RETRIES = 2;\n","import { connect } from 'react-redux';\nimport App from './app';\nimport { fetch, setIndicator } from '../actions';\nimport { StateT } from '../reducer';\n\nexport const mapStateToProps = (state: StateT) => state;\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  getContent: () => dispatch(fetch()),\n  onClick: (el: any) => {\n    const { id, category, subTheme, theme } = el.dataset;\n    if (!id) return;\n    return dispatch(\n      setIndicator({\n        category: parseInt(category),\n        id: parseInt(id),\n        subTheme: parseInt(subTheme),\n        theme: parseInt(theme),\n      }),\n    );\n  },\n});\n\nconst Wrapper = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n\nexport default Wrapper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport Store from './store';\nimport App from './components/app.wrapper';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}