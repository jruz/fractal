{"version":3,"sources":["reducer.helpers.ts","reducer.ts","middlewares/url.ts","store.ts","components/indicator.tsx","components/indicator.wrapper.ts","components/category.tsx","components/category.wrapper.ts","components/subTheme.tsx","components/subTheme.wrapper.ts","components/theme.tsx","components/theme.wrapper.ts","components/app.tsx","actions.ts","config.ts","components/app.wrapper.ts","serviceWorker.ts","index.tsx"],"names":["getAux","themes","aux","forEach","t","sub_themes","s","categories","c","indicators","i","String","id","category","indicator","subTheme","theme","initialState","data","Set","subThemes","status","Reducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","ids","_ref","validIds","keys","every","includes","isValidIndicator","ind","add","push","_action$payload","_getSelectionsClone","toConsumableArray","getSelectionsClone","has","subThemeIndex","indexOf","catIndex","themeIndex","delete","splice","Middleware","store","next","getState","Qs","parse","window","location","search","ignoreQueryPrefix","dispatch","args","stringify","arrayFormat","history","pushState","concat","middlewares","thunk","url","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","apply","createStore","reducer","Indicator","isSelected","name","react_default","a","createElement","className","data-category","data-id","data-sub-theme","data-theme","Wrapper","connect","ownProps","Category","map","indicator_wrapper","assign","key","SubTheme","category_wrapper","Theme","subTheme_wrapper","App","_this","this","props","getContent","onpopstate","onPopState","_this$props","onClick","e","target","theme_wrapper","Component","getData","Axios","get","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","Retry","retries","sent","t0","console","error","stop","_x","el","_el$dataset","dataset","parseInt","Boolean","hostname","match","ReactDOM","render","es","Store","app_wrapper","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ac7292a.chunk.js","sourcesContent":["import { ThemeT } from './components/theme';\nimport { IndicatorT } from './components/indicator';\nimport { StateT } from './reducer';\n\nexport interface AuxItemT {\n  category: number;\n  indicator: number;\n  subTheme: number;\n  theme: number;\n}\nexport interface AuxT {\n  [propName: string]: AuxItemT;\n}\n\nexport const getAux = (themes: ThemeT[]): AuxT => {\n  const aux: AuxT = {};\n  themes.forEach((t) => {\n    t.sub_themes.forEach((s) => {\n      s.categories.forEach((c) => {\n        c.indicators.forEach((i: IndicatorT) => {\n          aux[String(i.id)] = {\n            category: c.id,\n            indicator: i.id,\n            subTheme: s.id,\n            theme: t.id,\n          };\n        });\n      });\n    });\n  });\n  return aux;\n};\n\nexport const isValidIndicator = ({ aux }: StateT, ids: string[]): boolean => {\n  const validIds = Object.keys(aux);\n  return ids.every((id) => validIds.includes(id));\n};\n\nexport const getSelectionsClone = (state: StateT) => ({\n  categories: [...state.categories],\n  indicators: new Set([...state.indicators]),\n  subThemes: [...state.subThemes],\n  themes: [...state.themes],\n});\n","import { ThemeT } from './components/theme';\nimport { ActionT } from './actions';\nimport {\n  AuxT,\n  getAux,\n  getSelectionsClone,\n  isValidIndicator,\n} from './reducer.helpers';\n\nexport interface StateT {\n  aux: AuxT;\n  categories: number[];\n  data: ThemeT[];\n  indicators: Set<number>;\n  subThemes: number[];\n  themes: number[];\n  status: 'PENDING' | 'ERROR' | 'NOT_FOUND' | 'OK';\n}\n\nconst initialState = {\n  data: [], // api response\n  aux: {}, // auxilairy DS to store indicators with their properties\n  categories: [], // selected ids\n  indicators: new Set(), // selected ids\n  subThemes: [], // selected ids\n  themes: [], // selected ids\n  status: 'PENDING' as 'PENDING',\n};\n\nconst Reducer = (state: StateT = initialState, action: ActionT): StateT => {\n  switch (action.type) {\n    case 'RESET': {\n      return { ...initialState };\n    }\n    case 'FETCH_PENDING': {\n      return { ...state, status: 'PENDING' };\n    }\n    case 'FETCH_FULFILLED': {\n      // Generates an auxiliary object storing\n      // all indicators with their properties for faster lookup\n      return {\n        ...state,\n        aux: getAux(action.payload),\n        data: action.payload,\n        status: 'OK',\n      };\n    }\n    case 'FETCH_REJECTED': {\n      return { ...state, status: 'ERROR' };\n    }\n    case 'SET_INDICATORS': {\n      const ids = action.payload;\n      const categories: number[] = [];\n      const indicators = new Set();\n      const subThemes: number[] = [];\n      const themes: number[] = [];\n      // Checks if the indicator ids are on the aux data structure\n      if (!isValidIndicator(state, action.payload))\n        return { ...state, status: 'NOT_FOUND' };\n      // If all of them are valid stores the ids\n      ids.forEach((i: string) => {\n        const ind = state.aux[i];\n        indicators.add(ind.indicator);\n        categories.push(ind.category);\n        themes.push(ind.theme);\n        subThemes.push(ind.subTheme);\n      });\n      return {\n        ...state,\n        categories,\n        indicators,\n        subThemes,\n        themes,\n      };\n    }\n    case 'SET_INDICATOR': {\n      const { id, category, theme, subTheme } = action.payload;\n      const { categories, indicators, subThemes, themes } = getSelectionsClone(\n        state,\n      );\n      // If indicator is present is treated a deselection\n      if (indicators.has(id)) {\n        const subThemeIndex = subThemes.indexOf(subTheme);\n        const catIndex = state.categories.indexOf(category);\n        const themeIndex = themes.indexOf(theme);\n        indicators.delete(id);\n        categories.splice(catIndex, 1);\n        subThemes.splice(subThemeIndex, 1);\n        themes.splice(themeIndex, 1);\n      } else {\n        indicators.add(id);\n        categories.push(category);\n        subThemes.push(subTheme);\n        themes.push(theme);\n      }\n      return {\n        ...state,\n        categories,\n        indicators,\n        subThemes,\n        themes,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import Qs from 'qs';\nimport { ActionT } from '../actions';\nimport { StoreT } from '../store';\n\nconst Middleware = (store: StoreT) => (next: Function) => (\n  action: ActionT,\n): void => {\n  next(action);\n  const state = store.getState();\n  switch (action.type) {\n    case 'NAVIGATE':\n    case 'FETCH_FULFILLED': {\n      const args = Qs.parse(window.location.search, {\n        ignoreQueryPrefix: true,\n      });\n      const ids = args.indicators || [];\n      store.dispatch({ type: 'SET_INDICATORS', payload: ids });\n      break;\n    }\n    case 'SET_INDICATOR': {\n      const args = Qs.stringify(\n        { indicators: [...state.indicators] },\n        { arrayFormat: 'brackets' },\n      );\n      window.history.pushState({}, '', `?${args}`);\n      break;\n    }\n    default:\n  }\n};\n\nexport default Middleware;\n","import { createStore } from 'redux';\nimport { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport { ActionT } from './actions';\nimport { StateT } from './reducer';\nimport url from './middlewares/url';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst middlewares = [thunk, url];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleware = applyMiddleware(...middlewares);\n\nexport interface StoreT {\n  getState: () => StateT;\n  dispatch: (action: ActionT) => void;\n}\n\nexport default createStore(reducer, composeEnhancers(middleware));\n","import React from 'react';\n\nconst Indicator = ({\n  category,\n  id,\n  isSelected,\n  name,\n  subTheme,\n  theme,\n}: IndicatorT) => (\n  <div\n    className={isSelected ? 'indicator selected' : 'indicator'}\n    data-category={category}\n    data-id={id}\n    data-sub-theme={subTheme}\n    data-theme={theme}\n  >\n    {name}\n  </div>\n);\n\nexport interface IndicatorT {\n  category: number;\n  id: number;\n  isSelected: boolean;\n  name: string;\n  subTheme: number;\n  theme: number;\n}\n\nexport default Indicator;\n","import { connect } from 'react-redux';\nimport Indicator from './indicator';\nimport { IndicatorT } from './indicator';\nimport { StateT } from '../reducer';\n\nexport const mapStateToProps = (state: StateT, ownProps: IndicatorT) => {\n  const { indicators } = state;\n  return {\n    ...ownProps,\n    isSelected: indicators.has(ownProps.id),\n  };\n};\n\nconst Wrapper = connect(mapStateToProps)(Indicator);\n\nexport default Wrapper;\n","import React from 'react';\nimport Indicator from './indicator.wrapper';\nimport { IndicatorT } from './indicator';\n\nconst Category = ({\n  id,\n  indicators,\n  isSelected,\n  name,\n  subTheme,\n  theme,\n}: CategoryT) => (\n  <div className=\"category\">\n    <div className={isSelected ? 'name selected' : 'name'}>{name}</div>\n    <div className=\"indicators\">\n      {indicators.map(\n        (i) =>\n          i && (\n            <Indicator\n              {...i}\n              category={id}\n              key={i.id}\n              subTheme={subTheme}\n              theme={theme}\n            />\n          ),\n      )}\n    </div>\n  </div>\n);\n\nexport interface CategoryT {\n  id: number;\n  name: string;\n  indicators: [IndicatorT];\n  isSelected: boolean;\n  subTheme: number;\n  theme: number;\n}\n\nexport default Category;\n","import { connect } from 'react-redux';\nimport Category from './category';\nimport { CategoryT } from './category';\nimport { StateT } from '../reducer';\n\nexport const mapStateToProps = (state: StateT, ownProps: CategoryT) => {\n  const { categories } = state;\n  return {\n    ...ownProps,\n    isSelected: categories.includes(ownProps.id),\n  };\n};\n\nconst Wrapper = connect(mapStateToProps)(Category);\n\nexport default Wrapper;\n","import React from 'react';\nimport Category from './category.wrapper';\nimport { CategoryT } from './category';\n\nconst SubTheme = ({ name, id, categories, theme, isSelected }: SubThemeT) => (\n  <div className=\"subTheme\">\n    <div className={isSelected ? 'name selected' : 'name'}>{name}</div>\n    <div className=\"categories\">\n      {categories.map(\n        (i) => i && <Category {...i} key={i.id} subTheme={id} theme={theme} />,\n      )}\n    </div>\n  </div>\n);\n\nexport interface SubThemeT {\n  id: number;\n  name: string;\n  theme: number;\n  categories: [CategoryT];\n  isSelected: boolean;\n}\n\nexport default SubTheme;\n","import { connect } from 'react-redux';\nimport SubTheme from './subTheme';\nimport { SubThemeT } from './subTheme';\nimport { StateT } from '../reducer';\n\nexport const mapStateToProps = (state: StateT, ownProps: SubThemeT) => {\n  const { subThemes } = state;\n  return {\n    ...ownProps,\n    isSelected: subThemes.includes(ownProps.id),\n  };\n};\n\nconst Wrapper = connect(mapStateToProps)(SubTheme);\n\nexport default Wrapper;\n","import React from 'react';\nimport SubTheme from './subTheme.wrapper';\nimport { SubThemeT } from './subTheme';\n\nconst Theme = ({ name, id, sub_themes, isSelected }: ThemeT) => (\n  <div className=\"theme\">\n    <div className={isSelected ? 'name selected' : 'name'}>{name}</div>\n    <div className=\"subThemes\">\n      {sub_themes.map((i) => i && <SubTheme {...i} key={i.id} theme={id} />)}\n    </div>\n  </div>\n);\n\nexport interface ThemeT {\n  id: number;\n  name: string;\n  sub_themes: [SubThemeT];\n  isSelected: boolean;\n}\n\nexport default Theme;\n","import { connect } from 'react-redux';\nimport Theme from './theme';\nimport { ThemeT } from './theme';\nimport { StateT } from '../reducer';\n\nexport const mapStateToProps = (state: StateT, ownProps: ThemeT) => {\n  const { themes } = state;\n  return {\n    ...ownProps,\n    isSelected: themes.includes(ownProps.id),\n  };\n};\n\nconst Wrapper = connect(mapStateToProps)(Theme);\n\nexport default Wrapper;\n","import React, { Component, Fragment } from 'react';\nimport './app.css';\nimport Theme from './theme.wrapper';\n\nclass App extends Component<any, any> {\n  componentDidMount() {\n    this.props.getContent();\n    window.onpopstate = () => this.props.onPopState();\n  }\n  render() {\n    const { data, onClick, status } = this.props;\n    switch (status) {\n      case 'NOT_FOUND': {\n        return <p>Indicator not found</p>;\n      }\n      case 'ERROR': {\n        return <p>Connection error :(</p>;\n      }\n      case 'OK': {\n        return (\n          <div className=\"App\">\n            <div className=\"header\">\n              <div>Theme</div>\n              <div>SubTheme</div>\n              <div>Category</div>\n              <div>Indicator</div>\n            </div>\n            <div onClick={(e) => onClick(e.target)}>\n              {data.map((i: any) => i && <Theme {...i} key={i.id} />)}\n            </div>\n          </div>\n        );\n      }\n      default: {\n        return <p>loading...</p>;\n      }\n    }\n  }\n}\n\nexport default App;\n","import Axios from 'axios';\nimport Retry from 'async-retry';\nimport { API_URL, RETRIES } from './config';\n\nconst getData = (dispatch: Function) => {\n  dispatch({ type: 'FETCH_PENDING' });\n  return Axios.get(API_URL);\n};\n\nexport const fetch = () => {\n  return async (dispatch: Function) => {\n    try {\n      const res: any = await Retry(() => getData(dispatch), {\n        retries: RETRIES,\n      });\n      dispatch({ type: 'FETCH_FULFILLED', payload: res.data });\n    } catch (e) {\n      dispatch({ type: 'FETCH_REJECTED' });\n      console.error(e);\n      throw e;\n    }\n  };\n};\n\nexport const setIndicator = (payload: ActiveT) => ({\n  type: 'SET_INDICATOR',\n  payload,\n});\n\nexport const navigate = () => ({\n  type: 'NAVIGATE',\n});\n\nexport interface ActiveT {\n  category: number;\n  id: number;\n  subTheme: number;\n  theme: number;\n}\n\nexport interface ActionT {\n  type:\n    | 'NAVIGATE'\n    | 'FETCH_FULFILLED'\n    | 'FETCH_PENDING'\n    | 'FETCH_REJECTED'\n    | 'RESET'\n    | 'SET_INDICATOR'\n    | 'SET_INDICATORS';\n  payload?: any;\n}\n","export const API_URL =\n  'https://kf6xwyykee.execute-api.us-east-1.amazonaws.com/production/tree/input';\n\nexport const RETRIES = 2;\n","import { connect } from 'react-redux';\nimport App from './app';\nimport { fetch, setIndicator, navigate } from '../actions';\nimport { StateT } from '../reducer';\n\nexport const mapStateToProps = (state: StateT) => state;\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  getContent: () => dispatch(fetch()),\n  onClick: (el: any) => {\n    const { id, category, subTheme, theme } = el.dataset;\n    if (!id) return;\n    return dispatch(\n      setIndicator({\n        category: parseInt(category),\n        id: parseInt(id),\n        subTheme: parseInt(subTheme),\n        theme: parseInt(theme),\n      }),\n    );\n  },\n  onPopState: () => dispatch(navigate()),\n});\n\nconst Wrapper = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n\nexport default Wrapper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport Store from './store';\nimport App from './components/app.wrapper';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}